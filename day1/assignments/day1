##################################### Exercise 1:

: cat > z.txt  #this instruction will create a file called z and then give the order to write whatever we want to write
Z


to save and exit , all we have to do is to press (CTRL+D).
```

####################################### Exercise 2:


$ pwd
$ touch foo
$ chmod 455 foo
$ ls -l
total 1
-r--r-xr-x 1 XX XX 40 Jun 1 23:42 foo
%>
```

#######################################Exercise 3:


```
$ mkdir test0 test2   # cette commande permet de creer les deux dossiers test0 et test1
$ touch  test1  test3  test4  test5
$ chmod 715 test0
$ chmod 714 test1
$ chmod 504 test2
$ chmod 404 test3
$ chmod 641 test4
$ chmod 404 test5
$ ln -s test0 test6
%> ls -l
#the output will be something like this
total XX
drwx--xr-x 2 XX XX XX Jun 1 20:47 test0
-rwx--xr-- 1 XX XX 4 Jun 1 21:46 test1
dr-x---r-- 2 XX XX XX Jun 1 22:45 test2
-r-----r-- 2 XX XX 1 Jun 1 23:44 test3
-rw-r----x 1 XX XX 2 Jun 1 23:43 test4
-r-----r-- 2 XX XX 1 Jun 1 23:44 test5
lrwxr-xr-x 1 XX XX 5 Jun 1 22:20 test6 -> test0
%>
```

##################################Exercise 4:


$ ls -t -p -m
```

###################################Exercise 5:



```
$ find . -type f ! -name "*.sh"| cat -e
#the output will be something like this
find_sh$
file1$
file2$
file3$
$>
```

 ####################################### Exercise 5:
 
```
$ find . \( -type f -or -type d \) -print | wc -l
#the output :
42$
$>
```
